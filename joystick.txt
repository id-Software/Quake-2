Title: Description of Windows 95 Quake 2 support for DirectInput devices such as:
	standard joysticks
	FPgaming Assassin 3D		www.fpgaming.com
	Logitech WingMan Warrior	www.logitech.com
        Mad Catz Panther                www.madcatz.com
	Mad Catz Panther XL		www.madcatz.com
	SpaceTec IMC SpaceOrb 360	www.spacetec.com
File: JOYSTICK.TXT
Revision History:
	02/21/97  JCB  Quake 1:  Created by FPgaming, Inc. (www.fpgaming.com) -- Creators of the Assassin 3D.
        03/12/97  id   Quake 1:  Joysticks are disabled by default now.
        10/28/97  JCB  Quake 2:  Added up/down axis control for SpaceOrb 360 users, changed names to joy_* and changed 'joystick to 'in_joystick'.
Overview:
The input device support in Quake 2 is designed to take full advantage of your DirectInput device.  Standard joysticks, digital joysticks and new advanced controllers are all supported.


Standard Joystick Directions:
1.  Verify your joystick or game controller is selected in the Joystick (or Game Controllers) control panel applet.
2.  Verify your device has been calibrated and tested.
3.  Launch Quake 2 (quake2.exe).
4.  Type 'in_joystick 1' at the console to enable your joystick (only needs to by typed in one time).
From then on, just launch Quake 2.


Advanced Controller Directions:
1.  Verify your joystick or game controller is selected in the Joystick (or Game Controllers) control panel applet.
2.  Verify your device has been calibrated and tested.
3.  Get the configuration file for your controller from your manufacturer's website or copy from the selections below.
4.  Place the configuration file in your quake2\baseq2 directory.
6.  Launch Quake 2 (quake2.exe).
7.  Type 'exec <configuration file name here>' at the console to enable your advanced controller each time you launch Quake 2.
Optionally you can:
Create or modify quake2\baseq2\autoexec.cfg to include an exec to your configuration file (i.e. 'exec adva3d.cfg').  This will automatically load your configuration file each time you launch Quake 2.
From then on, just launch Quake 2.
  

Details:
(This may be more information than you ever wanted to know.)
Standard Joystick Support
The standard joystick support has been enhanced to provide the following:
1. proportional movement (the farther you move the stick, the faster you move) 
2. support for up to 32 buttons (JOY1-JOY4 and AUX5-AUX32)
3. sensitivity setting for each control (allows tuning and inverting the control direction)
4. dead-zone setting for each control

The default joystick setting is for joystick left/right movement to control turning and for joystick forward/backward movement to control moving forward/backward.  For optional strafing, add the 'sidestep' feature to one of your buttons (via the Customize menu).  For optional looking, add the 'mouse look' feature to one of your buttons (also via the Customize menu).  

Additionally, there are several features that you can set from the Options menu.  'Always Run' allows you change your maximum speed from walking to running.  'Invert Mouse' allows you to change the direction the joystick has to move to when looking up and down.  'Lookspring' enables automatic look-forward-when-moving.  And, 'Lookstrafe' automatically enables strafing when the 'mouse look' button is pressed.

The following variables control your sensititivity settings:
	joy_forwardsensitivity - controls the ramp-up speed for moving forward and backward
	joy_sidesensitivity - controls the ramp-up speed for moving side to side
	joy_upsensitivity - controls the ramp-up speed for moving up and down
	joy_pitchsensitivity - controls the speed that you look up and down
	joy_yawsensitivity - controls the speed that you look left to right
You can set the sensitivity settings to negative numbers.  This inverts the direction of movement for the control.  The default sensitivity settings are 1 (or -1).  There is no limit on the range; whatever feels good.

The following variables control your threshold settings:
	joy_forwardthreshold - controls the dead-zone for moving forward and backward
	joy_sidethreshold - controls the dead-zone for moving side to side
	joy_upthreshold - controls the dead-zone for moving up and down
	joy_pitchthreshold - controls the dead-zone for looking up and down
	joy_yawthreshold - controls the dead-zone for looking left and right
The threshold settings allow you to control your dead-zone (or no-movement zone).  The default threshold settings are .15 (meaning 15% of the full-range).  The range of the threshold settings is from 0 to 1.  Troublesome analog joysticks may need a larger number (like .2).  Premium joysticks can use a smaller number (like .1).

The joystick sensitivity settings and the threshold settings are not saved after you quit your game as inadvertent settings can really hose your control.  If you want to keep any changes, add them into your autoexec.cfg file or add an 'exec' call to your configuration file.

If your joystick has a POV hat, the buttons are mapped to AUX29-AUX32.  So, you get 8 buttons with the Logitech WingMan Extreme and 12 buttons with the Microsoft SideWinder 3D Pro, etc.


Advanced Controller Support
The following features have been added:
1. support for all 6 axes (X, Y, Z, R, U, V)
2. mapping of any axis to any control (Forward, Look, Side, Turn, Up)
3. proportional movement for all controls
4. sensitivity setting for any control (allows tuning and inverting the control direction)
5. threshold setting for any control (allows dead-zone setting)
6. support for absolute controls (like joysticks) and relative controls (like trackballs)
7. support for up to 32 buttons (JOY1-JOY4 and AUX5-AUX32)

******************************************************************************
NOTE:  The information below is for game controller companies to integrate their device and for anyone wanting to create a custom setup.

In addition to the above new variables, there are six more for axis mapping.  These are:
	joy_advaxisx - controls mapping of DirectInput axis X (typically joystick left and right)
	joy_advaxisy - controls mapping of DirectInput axis Y (typically joystick forward and backward)
	joy_advaxisz - controls mapping of DirectInput axis Z (typically joystick throttle)
	joy_advaxisr - controls mapping of DirectInput axis R (typically joystick rudder)
        joy_advaxisu - controls mapping of DirectInput axis U (custom axis - Assassin 3D trackball left and right and SpaceOrb roll)
	joy_advaxisv - controls mapping of DirectInput axis V (custom axis - Assassin 3D trackball forward and backward and SpaceOrb yaw)
Each joy_advaxis variable can be set to the following controls:
	0 = Axis not used
	1 = Axis is for forward and backward movement
	2 = Axis is for looking up and down (pitch)
	3 = Axis is for side to side movement
	4 = Axis is for turning left and right (yaw)
	5 = Axis is for up and down movement
Additionally, each axis can be designated as an absolute axis (like a joystick) or a relative axis (like the FPgaming trackball).  Absolute axes are defined as having a stopping position whereas relative axes don't have a stopping position and just go around and around.  To designate an axis as a relative axis, add 16 to the above control number.  For example, to set the Assassin 3D's axis U to be looking left and right, type 'joyadvaxisu 20'.  As another example, to make your rudder pedals contol turning left and right, type 'joyadvaxisr 4'.  It's a bit complicated, but only needs to be done once.

The advanced axes variables will not have any effect until joyadvanced is set to 1.  Additionally, any changes to the to the axes will not take effect until the joyadvancedupdate command is executed.  So, the procedure for creating an advanced mapping is:
1.  set 'joy_advanced 1'
2.  make any desired mapping changes
3.  make any desired sensitivity changes
4.  make any desired threshold changes
3.  call 'joy_advancedupdate'

Here is the config file for the FPgaming Assassin 3D:
// ADVA3D.CFG
// Revision 2.0 -- refer to www.fpgaming.com for updates
joy_name "FPgaming Assassin 3D"
+mlook
in_joystick 1
joy_advanced 1
joy_advaxisx 3
joy_advaxisy 1
joy_advaxisz 0
joy_advaxisr 0
joy_advaxisu 20
joy_advaxisv 18
joy_forwardsensitivity -1.0
joy_sidesensitivity 1.0
joy_upsensitivity 1.0
joy_pitchsensitivity -0.25
joy_yawsensitivity -0.5
joy_forwardthreshold 0.15
joy_sidethreshold 0.15
joy_upthreshold 0.15
joy_yawthreshold 0.0
joy_pitchthreshold 0.0
joy_advancedupdate

Here is a config file for the Mad Catz Panther and Mad Catz Panther XL:
// ADVPNTHR.CFG
// Revision 2.0 -- refer to www.madcatz.com for updates
joy_name "Mad Catz Panther/Panther XL"
+mlook
in_joystick 1
joy_advanced 1
joy_advaxisx 3
joy_advaxisy 1
joy_advaxisz 0
joy_advaxisr 0
joy_advaxisu 20
joy_advaxisv 18
joy_forwardsensitivity -1.0
joy_sidesensitivity 1.0
joy_upsensitivity 1.0
joy_pitchsensitivity -0.25
joy_yawsensitivity -0.5
joy_forwardthreshold 0.15
joy_sidethreshold 0.15
joy_upthreshold 0.15
joy_yawthreshold 0.0
joy_pitchthreshold 0.0
joy_advancedupdate

Here is a config file for the Logitech WingMan Warrior:
// ADVWW.CFG
// Revision 0.2 -- refer to www.logitech.com for updates
joy_name "Logitech WingMan Warrior"
in_joystick 1
joy_advanced 1
joy_advaxisx 3
joy_advaxisy 1
joy_advaxisz 0
joy_advaxisr 4
joy_advaxisu 0
joy_advaxisv 0
joy_forwardsensitivity -1.0
joy_sidesensitivity 1.0
joy_upsensitivity 1.0
joy_pitchsensitivity 0.0
joy_yawsensitivity -3.0
joy_forwardthreshold 0.15
joy_sidethreshold 0.15
joy_upthreshold 0.15
joy_pitchthreshold 0.0
joy_yawthreshold 0.0
joy_advancedupdate

Here is a config file for the SpaceTec IMC SpaceOrb 360:
// ADVSPORB.CFG
// Revision 0.2 -- refer to www.spacetec.com for updates
joy_name "SpaceTec IMC SpaceOrb 360"
+mlook
in_joystick 1
joy_advanced 1
joy_advaxisx 3
joy_advaxisy 0
joy_advaxisz 1
joy_advaxisr 2
joy_advaxisu 4
joy_advaxisv 5
joy_forwardsensitivity 2.5
joy_sidesensitivity 2.0
joy_upsensitivity -2.0
joy_pitchsensitivity 2.0
joy_yawsensitivity 5.0
joy_forwardthreshold 0.0
joy_sidethreshold 0.0
joy_upthreshold 0.15
joy_pitchthreshold 0.1
joy_yawthreshold 0.0
joy_advancedupdate

Here is a config file for making your joystick operate looking around and strafing, your rudder pedals control turning left and right and throttle control moving forward and backward:
joy_name "Joystick, Rudder & Throttle"
in_joystick 1
joy_advanced 1
joy_advaxisx 3
joy_advaxisy 2
joy_advaxisz 1
joy_advaxisr 4
joy_advaxisu 0
joy_advaxisv 0
joy_forwardsensitivity -1.0
joy_sidesensitivity -1.0
joy_upsensitivity 1.0
joy_pitchsensitivity 1.0
joy_yawsensitivity -1.0
joy_forwardthreshold 0.15
joy_sidethreshold 0.15
joy_upthreshold 0.15
joy_pitchthreshold 0.15
joy_yawthreshold 0.15
joy_advancedupdate
